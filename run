#!/bin/bash
# Comprehensive HMS stack runner: builds and runs everything with proper configuration
set -e

cd "$(dirname "$0")"

echo "🏥 Starting Hospital Management System..."

# Stop all running containers
echo "📍 Stopping existing containers..."
sudo docker-compose down 2>/dev/null || true

# Kill any processes on ports 8080 and 3000
echo "🔧 Freeing up ports 8080 and 3000..."
sudo lsof -ti:8080 | xargs sudo kill -9 2>/dev/null || true
sudo lsof -ti:3000 | xargs sudo kill -9 2>/dev/null || true

# Build the backend with H2 database
echo "🔨 Building backend..."
./mvnw clean package -DskipTests

# Start backend with H2 database in background
echo "🚀 Starting backend on port 8080 with H2 database..."
nohup java -jar target/hms-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev > backend.log 2>&1 &
BACKEND_PID=$!
echo "Backend PID: $BACKEND_PID"

# Wait for backend to be responsive (check API docs instead of health which can fail due to mail)
echo "⏳ Waiting for backend to be ready..."
for i in {1..30}; do
  if curl -sf http://localhost:8080/api-docs > /dev/null 2>&1; then
    echo "✅ Backend is responding!"
    break
  fi
  if [ $i -eq 30 ]; then
    echo "❌ Backend failed to start after 30 attempts"
    echo "Backend logs:"
    tail -20 backend.log
    exit 1
  fi
  echo "  Attempt $i/30 - waiting for backend..."
  sleep 2
done

# Start frontend
echo "🎨 Starting frontend on port 3000..."
cd frontend
npm install > /dev/null 2>&1
echo "✅ Frontend dependencies installed"
PORT=3000 npm run dev &
FRONTEND_PID=$!
echo "Frontend PID: $FRONTEND_PID"
cd ..

# Wait for frontend to be ready
echo "⏳ Waiting for frontend to be ready..."
for i in {1..15}; do
  if curl -sf http://localhost:3000 > /dev/null 2>&1; then
    echo "✅ Frontend is ready!"
    break
  fi
  if [ $i -eq 15 ]; then
    echo "⚠️  Frontend might still be starting..."
    break
  fi
  echo "  Attempt $i/15 - waiting for frontend..."
  sleep 2
done

echo "
🎉 HMS Application is now running successfully!

📊 Backend API:  http://localhost:8080
   - API Documentation: http://localhost:8080/swagger-ui.html
   - H2 Database Console: http://localhost:8080/h2-console
     (URL: jdbc:h2:mem:testdb, User: sa, Password: [empty])

🖥️  Frontend UI:  http://localhost:3000

� Key Features Available:
   - OPD Management (Patients, Appointments, Consultations)
   - IPD Management (Admissions, Wards, Beds, Vitals)
   - Pharmacy Management (Medicines, Sales, Returns)
   - Billing & Payments
   - User Management & Authentication

�📝 Application Logs:
   - Backend: tail -f backend.log
   - Frontend: Check terminal output

🛑 To stop the application:
   - Use: ./stop
   - Or manually: kill $BACKEND_PID $FRONTEND_PID
"

# Save PIDs for the stop script
echo "$BACKEND_PID" > .backend_pid
echo "$FRONTEND_PID" > .frontend_pid
